let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <S-CR> :call InsertJSDocLineStart()
inoremap <C-Space> 	
map! <S-Insert> <MiddleMouse>
nnoremap  :Grep 
nnoremap   za
vmap <silent> ,vR <Plug>EgMapReplaceSelection_R
nmap <silent> ,vR <Plug>EgMapReplaceCurrentWord_R
omap <silent> ,vR <Plug>EgMapReplaceCurrentWord_R
vmap <silent> ,vr <Plug>EgMapReplaceSelection_r
nmap <silent> ,vr <Plug>EgMapReplaceCurrentWord_r
omap <silent> ,vr <Plug>EgMapReplaceCurrentWord_r
vmap <silent> ,vA <Plug>EgMapGrepSelection_A
nmap <silent> ,vA <Plug>EgMapGrepCurrentWord_A
omap <silent> ,vA <Plug>EgMapGrepCurrentWord_A
vmap <silent> ,va <Plug>EgMapGrepSelection_a
nmap <silent> ,va <Plug>EgMapGrepCurrentWord_a
omap <silent> ,va <Plug>EgMapGrepCurrentWord_a
vmap <silent> ,vV <Plug>EgMapGrepSelection_V
nmap <silent> ,vV <Plug>EgMapGrepCurrentWord_V
omap <silent> ,vV <Plug>EgMapGrepCurrentWord_V
vmap <silent> ,vv <Plug>EgMapGrepSelection_v
nmap <silent> ,vv <Plug>EgMapGrepCurrentWord_v
omap <silent> ,vv <Plug>EgMapGrepCurrentWord_v
map <silent> ,vo <Plug>EgMapGrepOptions
nnoremap ,rs :so $MYVIMRC
nnoremap ,rr :vsplit $MYVIMRC
nnoremap ,sc :SessionClose
nnoremap ,ss :SessionSave
nnoremap ,sl :SessionList
nnoremap ,d yyp
nmap gx <Plug>NetrwBrowseX
onoremap p i(
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nnoremap <F10> :call ShowLog("cd /home/cookson/workspace/Erpoge\\\ Server/ && xmllint --noout --schema data/schema.xsd data/mainmodule.xml")
nnoremap <F9> :call ShowLog("cd /home/cookson/workspace/Erpoge\\\ Server/ && ant all && ant buildStaticData")
nnoremap <F2> :w
nnoremap <Down> <Nop>
nnoremap <Up> <Nop>
nnoremap <Right> <Nop>
nnoremap <Left> <Nop>
map <S-Insert> <MiddleMouse>
inoremap  diw
nnoremap √¢ eb"zywk:b z.
nnoremap √Ø :b 
iabbr fucntion function
let &cpo=s:cpo_save
unlet s:cpo_save
set keymap=russian-jcukenwin
set autoindent
set background=dark
set backspace=indent,eol,start
set balloonexpr=eclim#util#Balloon(eclim#util#GetLineError(line('.')))
set fileencodings=ucs-bom,utf-8,default,latin1
set foldlevelstart=1
set guioptions=aegiLt
set helplang=en
set history=50
set ignorecase
set iminsert=0
set imsearch=0
set makeprg=ant\ -find\ 'build.xml'
set nomodeline
set printoptions=paper:letter
set ruler
set runtimepath=~/.vim,~/.vim/bundle/easygrep,~/.vim/bundle/fugitive,~/.vim/bundle/gist,~/.vim/bundle/pastebin,~/.vim/bundle/sudo,~/.vim/bundle/vimproc,~/.vim/bundle/webapi,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim72,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after,~/.vim/eclim,~/.vim/eclim/after
set shiftwidth=4
set smarttab
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc,.class
set tabstop=4
set termencoding=utf-8
set window=57
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/workspace/Erpoge\ Server/src
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +0 erpoge/core/BuildStaticData.java
silent! argdel *
edit erpoge/core/BuildStaticData.java
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe '1resize ' . ((&lines * 3 + 29) / 58)
exe '2resize ' . ((&lines * 52 + 29) / 58)
argglobal
enew
lnoremap <buffer> " –≠
lnoremap <buffer> # ‚Ññ
lnoremap <buffer> $ ;
lnoremap <buffer> & ?
lnoremap <buffer> ' —ç
lnoremap <buffer> , –±
lnoremap <buffer> . —é
lnoremap <buffer> / .
lnoremap <buffer> : –ñ
lnoremap <buffer> ; –∂
lnoremap <buffer> < –ë
lnoremap <buffer> > –Æ
lnoremap <buffer> ? ,
lnoremap <buffer> @ "
lnoremap <buffer> A –§
lnoremap <buffer> B –ò
lnoremap <buffer> C –°
lnoremap <buffer> D –í
lnoremap <buffer> E –£
lnoremap <buffer> F –ê
lnoremap <buffer> G –ü
lnoremap <buffer> H –†
lnoremap <buffer> I –®
lnoremap <buffer> J –û
let s:cpo_save=&cpo
set cpo&vim
lnoremap <buffer> K –õ
lnoremap <buffer> L –î
lnoremap <buffer> M –¨
lnoremap <buffer> N –¢
lnoremap <buffer> O –©
lnoremap <buffer> P –ó
lnoremap <buffer> Q –ô
lnoremap <buffer> R –ö
lnoremap <buffer> S –´
lnoremap <buffer> T –ï
lnoremap <buffer> U –ì
lnoremap <buffer> V –ú
lnoremap <buffer> W –¶
lnoremap <buffer> X –ß
lnoremap <buffer> Y –ù
lnoremap <buffer> Z –Ø
lnoremap <buffer> [ —Ö
lnoremap <buffer> ] —ä
lnoremap <buffer> ^ :
lnoremap <buffer> ` —ë
lnoremap <buffer> a —Ñ
lnoremap <buffer> b –∏
lnoremap <buffer> c —Å
lnoremap <buffer> d –≤
lnoremap <buffer> e —É
lnoremap <buffer> f –∞
lnoremap <buffer> g –ø
lnoremap <buffer> h —Ä
lnoremap <buffer> i —à
lnoremap <buffer> j –æ
lnoremap <buffer> k –ª
lnoremap <buffer> l –¥
lnoremap <buffer> m —å
lnoremap <buffer> n —Ç
lnoremap <buffer> o —â
lnoremap <buffer> p –∑
lnoremap <buffer> q –π
lnoremap <buffer> r –∫
lnoremap <buffer> s —ã
lnoremap <buffer> t –µ
lnoremap <buffer> u –≥
lnoremap <buffer> v –º
lnoremap <buffer> w —Ü
lnoremap <buffer> x —á
lnoremap <buffer> y –Ω
lnoremap <buffer> z —è
lnoremap <buffer> { –•
lnoremap <buffer> } –™
lnoremap <buffer> ~ –Å
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=russian-jcukenwin
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=wipe
setlocal buflisted
setlocal buftype=nofile
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal completefunc=
setlocal nocopyindent
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != ''
setlocal filetype=
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=1
setlocal foldmarker={{{,}}}
set foldmethod=syntax
setlocal foldmethod=syntax
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal nomodeline
setlocal nomodifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal previewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != ''
setlocal syntax=
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal winfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
wincmd w
argglobal
lnoremap <buffer> " –≠
lnoremap <buffer> # ‚Ññ
lnoremap <buffer> $ ;
lnoremap <buffer> & ?
lnoremap <buffer> ' —ç
lnoremap <buffer> , –±
lnoremap <buffer> . —é
lnoremap <buffer> / .
lnoremap <buffer> : –ñ
lnoremap <buffer> ; –∂
lnoremap <buffer> < –ë
lnoremap <buffer> > –Æ
lnoremap <buffer> ? ,
lnoremap <buffer> @ "
lnoremap <buffer> A –§
lnoremap <buffer> B –ò
lnoremap <buffer> C –°
lnoremap <buffer> D –í
lnoremap <buffer> E –£
lnoremap <buffer> F –ê
lnoremap <buffer> G –ü
lnoremap <buffer> H –†
lnoremap <buffer> I –®
lnoremap <buffer> J –û
let s:cpo_save=&cpo
set cpo&vim
lnoremap <buffer> K –õ
lnoremap <buffer> L –î
lnoremap <buffer> M –¨
lnoremap <buffer> N –¢
lnoremap <buffer> O –©
lnoremap <buffer> P –ó
lnoremap <buffer> Q –ô
lnoremap <buffer> R –ö
lnoremap <buffer> S –´
lnoremap <buffer> T –ï
lnoremap <buffer> U –ì
lnoremap <buffer> V –ú
lnoremap <buffer> W –¶
lnoremap <buffer> X –ß
lnoremap <buffer> Y –ù
lnoremap <buffer> Z –Ø
lnoremap <buffer> [ —Ö
lnoremap <buffer> ] —ä
lnoremap <buffer> ^ :
lnoremap <buffer> ` —ë
lnoremap <buffer> a —Ñ
lnoremap <buffer> b –∏
lnoremap <buffer> c —Å
lnoremap <buffer> d –≤
lnoremap <buffer> e —É
lnoremap <buffer> f –∞
lnoremap <buffer> g –ø
lnoremap <buffer> h —Ä
lnoremap <buffer> i —à
lnoremap <buffer> j –æ
lnoremap <buffer> k –ª
lnoremap <buffer> l –¥
lnoremap <buffer> m —å
lnoremap <buffer> n —Ç
lnoremap <buffer> o —â
lnoremap <buffer> p –∑
lnoremap <buffer> q –π
lnoremap <buffer> r –∫
lnoremap <buffer> s —ã
lnoremap <buffer> t –µ
lnoremap <buffer> u –≥
lnoremap <buffer> v –º
lnoremap <buffer> w —Ü
lnoremap <buffer> x —á
lnoremap <buffer> y –Ω
lnoremap <buffer> z —è
lnoremap <buffer> { –•
lnoremap <buffer> } –™
lnoremap <buffer> ~ –Å
inoreabbr <buffer> logger logger=eclim#java#logging#LoggingInit("logger")
inoreabbr <buffer> log log=eclim#java#logging#LoggingInit("log")
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=russian-jcukenwin
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=j1
setlocal cinwords=if,else,while,do,for,switch
setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=//%s
setlocal complete=.,w,b,u,t,i
setlocal completefunc=eclim#java#complete#CodeComplete
setlocal nocopyindent
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=%-G%.%#[javac]\ %.%#:\ warning:\ unmappable\ character\ %.%#,%A%.%#[javac]\ %f:%l:\ %m,%C%.%#[javac]\ symbol\ %#:\ %m,%-Z%.%#[javac]\ %p^,%A%.%#[javadoc]\ %f:%l:\ %m,%-C%.%#[javadoc]\ location:\ %.%#,%-C%.%#[javadoc]\ %#,%-Z%.%#[javadoc]\ %p^,%-G%.%#[javadoc]\ Note:%.%#,%-G%.%#[javadoc]\ javadoc:%.%#,%.%#[javadoc]\ %f:\ %m,%.%#[java]\ org.apache.jasper.JasperException:\ file:%f(%l\\,%c)\ %m,%+A%.%#[junit]\ %.%#Failures:\ %[%^0]%.%#\ Time\ elapsed:\ %.%#,%-Z%.%#[junit]\ Test\ %f\ FAILED,%+A%.%#[junit]\ %.%#Errors:\ %[%^0]%.%#\ Time\ elapsed:\ %.%#,%-Z%.%#[junit]\ Test\ %f\ FAILED,%+A%.%#[cactus]\ %.%#Failures:\ %[%^0]%.%#\ Time\ elapsed:\ %.%#,%-Z%.%#[cactus]\ Test\ %f\ FAILED,%+A%.%#[cactus]\ %.%#Errors:\ %[%^0]%.%#\ Time\ elapsed:\ %.%#,%-Z%.%#[cactus]\ Test\ %f\ FAILED,%.%#[checkstyle]\ %f:%l:%c:\ %m,%.%#[checkstyle]\ %f:%l:\ %m,%+A%.%#eclim\ testng:\ %f:%m,%.%#\ ERROR\ %.%#\ line\ %l\ in\ file:\ %.%f%.:\ %m,%.%#[exec]\ %f:%l:%c:\ %m,%.%#[exec]\ %f:%l:\ %m,%f:%l:%c:\ %m,%-G%.%#
setlocal noexpandtab
if &filetype != 'java'
setlocal filetype=java
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=1
setlocal foldmarker={{{,}}}
set foldmethod=syntax
setlocal foldmethod=syntax
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=JSFold()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^s*import
setlocal includeexpr=substitute(v:fname,'\\.','/','g')
setlocal indentexpr=GetJavaIndent()
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e,0=extends,0=implements
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=ant\ -find\ build.xml\ $*
setlocal matchpairs=(:),{:},[:]
setlocal nomodeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.java
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'java'
setlocal syntax=java
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
26
normal zo
140
normal zo
146
normal zo
140
normal zo
26
normal zo
let s:l = 149 - ((138 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
149
normal! 03l
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 3 + 29) / 58)
exe '2resize ' . ((&lines * 52 + 29) / 58)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
